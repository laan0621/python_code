'''
1번문제
54원과 56원을 동전 2, 5, 50 를 사용하여 최소개수의 동전을 거스름돈으로 계산하는 알고리즘을 구현하세요.
'''

coin = [2,5,50]
str1 = []
str2 = []
num1 = 83
a = len(coin)
b = num1
num = a-1
while (a>0):
    str1.append(a)
    a-=1
str1.sort()
while(1):
    if (b > coin[str1[num]-1] or b == coin[str1[num]-1]):
        b = b - coin[str1[num]-1]
        str2.append(coin[num])
    elif(num==0):
        break
    elif(b < coin[str1[num]-1]):
        num-=1
    else:
        print('error')
print(str2)

'''
2번문제
하나의 값을 입력하고, 리스트 [4, 8, 12, 16]의 숫자들을 사칙연산을 이용하여 
입력한 수와 같은 값을 가지는 쌍을 출력하세요.
'''


'''
3번문제
다음 입사문제를 변형하였습니다.
S={1, 3, 4, 8, 13, 17, 20} 이 주어졌다면, 
그 중 가장 거리가 짧은 것의 쌍을 출력하는 함수를 작성하시오.
(단 점들의 배열은 모두 정렬되어있다고 가정한다.)
'''

str = [1,3,4,8,13,17,20]
a = []
c = 0
str.sort()
while c < len(str) :
    if c + 1 < len(str):
        a.append([str[c+1]-str[c],str[c],str[c+1]])
    c+=1
c = 0
a.sort()
while c < len(a):
    if a[c][0] == a[0][0]:
        print('(%d, %d)'%(a[c][1],a[c][2]))
    c+=1
    
'''
4번문제
3번 문제를 응용합니다.
3번 문제에서 1~20까지 숫자 중 10개를
난수로 얻은 뒤 결과값을 출력합니다.
복수의 정답도 함께 출력합니다.
'''

import random
c = 0
str = []
while c < 20:
    str.append(random.randint(1,20))
    c+=1
str.sort()
print(str)
a = []
c = 0
str.sort()
while c < len(str) :
    if c + 1 < len(str):
        a.append([str[c+1]-str[c],str[c],str[c+1]])
    c+=1
c = 0
a.sort()
str1 = []
while c < len(a):
    if a[c][0] == a[0][0] and not [a[c][1],a[c][2]] in str1:
        print('(%d, %d)'%(a[c][1],a[c][2]))
        str1.append([a[c][1],a[c][2]])
    c+=1

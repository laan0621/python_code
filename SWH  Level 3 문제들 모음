'''
1번문제
54원과 56원을 동전 2, 5, 50 를 사용하여 최소개수의 동전을 거스름돈으로 계산하는 알고리즘을 구현하라.
'''

coin = [2,5,50]
str1 = []
str2 = []
num1 = 83
a = len(coin)
b = num1
num = a-1
while (a>0):
    str1.append(a)
    a-=1
str1.sort()
while(1):
    if (b > coin[str1[num]-1] or b == coin[str1[num]-1]):
        b = b - coin[str1[num]-1]
        str2.append(coin[num])
    elif(num==0):
        break
    elif(b < coin[str1[num]-1]):
        num-=1
    else:
        print('error')
print(str2)

'''
2번문제
하나의 값을 입력하고, 리스트 [4, 8, 12, 16]의 숫자들을 사칙연산을 이용하여 
입력한 수와 같은 값을 가지는 쌍을 출력하시오.
'''

str1 = [4, 8, 12, 16]
str2 = []
str3 = []
str4 = []
num = int(input('사칙연산을 통해 얻어질 수 있는 값>>'))
while True:
    for a in str1:
        for b in str1:
            if a+b == num:
                str2.append([a,b])
            if a-b == num:
                str2.append([a,b])
            if a*b == num:
                str2.append([a,b])
            if a/b == num:
                str2.append([a,b])
    break
for c in str2:
    if c[0]>c[1] :
        str3.append([c[1],c[0]])
    else:
        str3.append(c)
for d in str3:
    if not d in str4:
        print(d)
        str4.append(d)
        
        
'''
3번문제
다음 입사문제를 변형하였습니다.
S={1, 3, 4, 8, 13, 17, 20} 이 주어졌다면, 
그 중 가장 거리가 짧은 것의 쌍을 출력하는 함수를 작성하시오.
(단 점들의 배열은 모두 정렬되어있다고 가정한다.)
'''

def S (str):
    a = []
    c = 0
    str.sort()
    while c < len(str) :
        if c + 1 < len(str):
            a.append([str[c+1]-str[c],str[c],str[c+1]])
        c+=1
    c = 0
    a.sort()
    while c < len(a):
        if a[c][0] == a[0][0]:
            print('(%d, %d)'%(a[c][1],a[c][2]))
        c+=1

str = [1,3,4,8,13,17,20]
S(str)
    
'''
4번문제
3번 문제를 응용합니다.
3번 문제에서 1~20까지 숫자 중 10개를
난수로 얻은 뒤 결과값을 출력하시오.
복수의 정답도 함께 출력합니다.
'''

import random
def S (str):
    str.sort()
    print(str)
    a = []
    c = 0
    str.sort()
    while c < len(str):
        if c + 1 < len(str):
            a.append([str[c + 1] - str[c], str[c], str[c + 1]])
        c += 1
    c = 0
    a.sort()
    while c < len(a):
        if a[c][0] == a[0][0]:
            print('(%d, %d)' % (a[c][1], a[c][2]))
        c += 1

c = 0
str = []
while c < 20:
    str.append(random.randint(1,20))
    c+=1
S(str)


'''
5번문제
자연수 n개로 이뤄진 숫자들 중 각 원소들의 합이 s인 수를 출력하시오. 
(단, 원소들간의 곱이 최대인 숫자)
'''

a = int(input("자연수의 개수를 입력하세요:"))
b = int(input("자연수의 합을 입력하세요:"))
num = 0
max = 0
resurt = []
max_resurt = []
num = 0
while num < a:
    max += 9*(10**num)
    num+=1
num = 0
while num<=max:
    num2 = 0
    re_resurt = []
    for c in str(num):
        num2+=int(c)
    if num2 == b:
        for d in str(num):
            re_resurt.append(int(d))
        resurt.append(re_resurt)
    num+=1
num2 = 0
for i in resurt:
    num = 1
    for f in i:
        num *= f
    if num2<num:
        num2 = num
        max_resurt = i

print(max_resurt)


'''
6번문제
연속된 자연수의 합으로 입력한 숫자를 표현하는 방법을 출력하는 코드를 작성하라.
'''

num = int(input("자연수를 입력하세요>>"))
a = 1
while a<= num:
    check = num
    str1 = []
    for b in range(a,num+1):
        str1.append(b)
        check -= b
        if check == 0:
            print(str1)
        elif check < 0:
            break
    a+=1

'''
7
단어을 연결하는 코드를 작성하라.
* 규칙 : 다음 단어는 이전 단어에 최소 2개이상의 영어가 포함되어 있어야한다.
시작단어 : hit
단어리스트 : hot, dot, dog, lot, log, cog
'''

str1 = "hit"
list1 = ["hot","dot","dog","lot","log","cog"]
num = 0
while num<len(list1):
    str2 = list1[num]
    num1=0
    for b in range(0,len(str1)):
        if str1[b] == str2[b]:
            num1+=1
    if num1>1:
        print(str1+"->",end="")
        str1 = str2
    num+=1
print(str1)
